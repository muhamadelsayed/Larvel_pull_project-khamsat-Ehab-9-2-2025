{
    "openapi": "3.0.0",
    "info": {
        "title": "Truck Service API Documentation",
        "description": "Interactive API documentation for the Truck Service application. Developed by Mohammed Sleem.",
        "contact": {
            "email": "dev.mohammed@example.com"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "https://bull-station.com",
            "description": "Main API Server"
        }
    ],
    "paths": {
        "/api/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "description": "Creates a new user account after validating a Firebase ID token (sent as Bearer in the Authorization header).",
                "operationId": "registerUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "name",
                                    "phone",
                                    "password",
                                    "account_type"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Test User"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "+966512345678"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "account_type": {
                                        "type": "string",
                                        "enum": [
                                            "client",
                                            "truck_owner"
                                        ],
                                        "example": "truck_owner"
                                    },
                                    "identity_image": {
                                        "description": "Required if account_type is truck_owner",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "driving_license_image": {
                                        "description": "Required if account_type is truck_owner",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful registration",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User registered successfully."
                                        },
                                        "access_token": {
                                            "type": "string",
                                            "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9..."
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "Bearer"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid or missing Firebase token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Firebase ID Token is missing."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Phone number mismatch",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Phone number does not match the verified token."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User Login",
                "operationId": "loginUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "phone",
                                    "password"
                                ],
                                "properties": {
                                    "phone": {
                                        "type": "string",
                                        "example": "+966512345678"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Login successful"
                                        },
                                        "access_token": {
                                            "type": "string",
                                            "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9..."
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "Bearer"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The provided credentials do not match our records."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "phone": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "The phone field is required."
                                            }
                                        },
                                        "password": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "The password field is required."
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/update-location": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Update user location",
                "description": "Updates the authenticated user's location.",
                "operationId": "updateLocation",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "location"
                                ],
                                "properties": {
                                    "location": {
                                        "type": "string",
                                        "example": "Riyadh, Saudi Arabia"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Location updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Location updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "location": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "The location field is required."
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/forgot-password": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Initiate password reset (send OTP)",
                "description": "Sends an OTP code to the user's phone for password reset. The phone number must exist in the system.",
                "operationId": "forgotPassword",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "phone"
                                ],
                                "properties": {
                                    "phone": {
                                        "type": "string",
                                        "example": "+966512345678"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OTP for password reset has been sent.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "OTP for password reset has been sent."
                                        },
                                        "phone": {
                                            "type": "string",
                                            "example": "+966512345678"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "phone": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "The phone field is required."
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/my-trucks": {
            "get": {
                "tags": [
                    "My Trucks"
                ],
                "summary": "Get the authenticated user's trucks",
                "description": "Returns a paginated list of the user's own trucks, with filtering options.",
                "operationId": "getMyTrucks",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "pending",
                                "active",
                                "inactive"
                            ]
                        }
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "latest",
                                "oldest"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/MyTruckResource"
                                            }
                                        },
                                        "links": {
                                            "type": "object"
                                        },
                                        "meta": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/trucks/{truck}": {
            "get": {
                "tags": [
                    "Public Data"
                ],
                "summary": "Get details of a single truck",
                "operationId": "getTruckDetails",
                "parameters": [
                    {
                        "name": "truck",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Truck details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/TruckResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found or not active.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Not found or not active."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Truck Management"
                ],
                "summary": "Update an existing truck",
                "description": "To update a truck with files (images/video), you must send a POST request and include `_method=PATCH` in the form-data. This is a limitation of how browsers handle file uploads.",
                "operationId": "updateTruck",
                "parameters": [
                    {
                        "name": "truck",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "_method": {
                                        "type": "string",
                                        "enum": [
                                            "PATCH"
                                        ],
                                        "example": "PATCH"
                                    },
                                    "price_per_day": {
                                        "type": "number",
                                        "format": "float",
                                        "example": "1600.50"
                                    },
                                    "images[]": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Truck updated and awaiting re-approval.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Truck updated and awaiting re-approval."
                                        },
                                        "truck_id": {
                                            "type": "integer",
                                            "example": 123
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "This action is unauthorized."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Truck not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Truck not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Truck Management"
                ],
                "summary": "Delete a truck",
                "description": "Requires authentication. Allows a truck owner to delete their own truck.",
                "operationId": "deleteTruck",
                "parameters": [
                    {
                        "name": "truck",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Truck has been successfully deleted.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Truck has been successfully deleted."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "This action is unauthorized."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Truck not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Truck not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/trucks": {
            "post": {
                "tags": [
                    "Truck Management"
                ],
                "summary": "Add a new truck",
                "description": "Requires authentication. Submits a new truck for admin approval.",
                "operationId": "storeTruck",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "category_id",
                                    "sub_category_id",
                                    "year_of_manufacture",
                                    "size",
                                    "model",
                                    "description",
                                    "price_per_day",
                                    "price_per_hour",
                                    "work_start_time",
                                    "work_end_time",
                                    "pickup_location",
                                    "delivery_available"
                                ],
                                "properties": {
                                    "category_id": {
                                        "type": "integer"
                                    },
                                    "sub_category_id": {
                                        "type": "integer"
                                    },
                                    "year_of_manufacture": {
                                        "type": "integer",
                                        "example": "2023"
                                    },
                                    "size": {
                                        "type": "string",
                                        "example": "25 Ton"
                                    },
                                    "model": {
                                        "type": "string",
                                        "example": "Caterpillar 320D"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "price_per_day": {
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "price_per_hour": {
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "work_start_time": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "08:00"
                                    },
                                    "work_end_time": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "18:00"
                                    },
                                    "pickup_location": {
                                        "type": "string"
                                    },
                                    "delivery_available": {
                                        "type": "boolean"
                                    },
                                    "delivery_price": {
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "images[]": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "video": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Truck submitted for approval.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Truck submitted for approval."
                                        },
                                        "truck_id": {
                                            "type": "integer",
                                            "example": 123
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/reset-password": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Reset user password",
                "description": "Allows a user to reset their password using a valid token.",
                "operationId": "f93180f97c46f79e028b188d8763b2e1",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "token",
                                    "password"
                                ],
                                "properties": {
                                    "token": {
                                        "description": "Password reset token",
                                        "type": "string"
                                    },
                                    "password": {
                                        "description": "New password",
                                        "type": "string",
                                        "format": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Password has been reset successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid token or password",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid token or password."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/my-bookings": {
            "get": {
                "tags": [
                    "Booking Management"
                ],
                "summary": "Get the authenticated user's bookings",
                "operationId": "getMyBookings",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "pending",
                                "approved",
                                "confirmed",
                                "rejected",
                                "cancelled",
                                "completed"
                            ]
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "incoming",
                                "outgoing"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of bookings for the authenticated user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/BookingResource"
                                            }
                                        },
                                        "links": {
                                            "type": "object",
                                            "example": {
                                                "first": "url",
                                                "last": "url",
                                                "prev": null,
                                                "next": "url"
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "example": {
                                                "current_page": 1,
                                                "from": 1,
                                                "last_page": 10,
                                                "path": "url",
                                                "per_page": 15,
                                                "to": 15,
                                                "total": 150
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "status": [
                                                    "The selected status is invalid."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/bookings": {
            "post": {
                "tags": [
                    "Booking Management"
                ],
                "summary": "Create a new booking request",
                "operationId": "storeBooking",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "truck_id",
                                    "start_datetime",
                                    "end_datetime",
                                    "days",
                                    "hours",
                                    "needs_delivery"
                                ],
                                "properties": {
                                    "truck_id": {
                                        "type": "integer"
                                    },
                                    "start_datetime": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2025-10-20 08:00:00"
                                    },
                                    "end_datetime": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2025-10-22 17:00:00"
                                    },
                                    "days": {
                                        "type": "integer",
                                        "example": "2"
                                    },
                                    "hours": {
                                        "type": "integer",
                                        "example": "9"
                                    },
                                    "needs_delivery": {
                                        "type": "boolean",
                                        "example": "true"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Booking request sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Booking request sent successfully. Awaiting owner approval."
                                        },
                                        "booking_id": {
                                            "type": "integer",
                                            "example": 123
                                        },
                                        "booking_details": {
                                            "properties": {
                                                "total_price": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 350.5
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "pending"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict, truck not available",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Sorry, this truck is no longer available for the selected dates."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "truck_id": [
                                                    "The selected truck id is invalid."
                                                ],
                                                "start_datetime": [
                                                    "The start datetime is not a valid date."
                                                ],
                                                "end_datetime": [
                                                    "The end datetime must be a date after or equal to start datetime."
                                                ],
                                                "days": [
                                                    "The days must be at least 0."
                                                ],
                                                "hours": [
                                                    "The hours must be at least 0."
                                                ],
                                                "needs_delivery": [
                                                    "The needs delivery field must be true or false."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/my-bookings/{booking}/approve": {
            "post": {
                "tags": [
                    "Booking Management"
                ],
                "summary": "Approve a booking request (Truck Owner)",
                "operationId": "approveBooking",
                "parameters": [
                    {
                        "name": "booking",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Booking has been approved. Awaiting payment.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Booking has been approved. Awaiting payment."
                                        },
                                        "booking": {
                                            "$ref": "#/components/schemas/BookingResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "This action is unauthorized."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/my-bookings/{booking}/reject": {
            "post": {
                "tags": [
                    "Booking Management"
                ],
                "summary": "Reject a booking request (Truck Owner)",
                "operationId": "rejectBooking",
                "parameters": [
                    {
                        "name": "booking",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Booking has been rejected.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Booking has been rejected."
                                        },
                                        "booking": {
                                            "$ref": "#/components/schemas/BookingResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "This action is unauthorized."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "SuccessMessage": {
                "title": "Success Message",
                "properties": {
                    "message": {
                        "type": "string",
                        "example": "Operation was successful."
                    }
                },
                "type": "object"
            },
            "ValidationError": {
                "title": "Validation Error",
                "properties": {
                    "message": {
                        "type": "string",
                        "example": "The given data was invalid."
                    },
                    "errors": {
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "User": {
                "title": "User Model",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "account_type": {
                        "type": "string",
                        "enum": [
                            "client",
                            "truck_owner"
                        ]
                    }
                },
                "type": "object"
            },
            "TruckResource": {
                "title": "Truck Resource",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "pending",
                            "active",
                            "inactive"
                        ]
                    },
                    "model": {
                        "type": "string"
                    },
                    "year_of_manufacture": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "price_per_day": {
                        "type": "string",
                        "format": "decimal"
                    },
                    "price_per_hour": {
                        "type": "string",
                        "format": "decimal"
                    },
                    "work_hours": {
                        "type": "string",
                        "example": "08:00:00 - 18:00:00"
                    },
                    "pickup_location": {
                        "type": "string"
                    },
                    "delivery_price": {
                        "type": "string",
                        "format": "decimal"
                    },
                    "owner": {
                        "$ref": "#/components/schemas/User"
                    },
                    "category": {
                        "type": "string"
                    },
                    "sub_category": {
                        "type": "string"
                    },
                    "images": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "url"
                        }
                    },
                    "video": {
                        "type": "string",
                        "format": "url"
                    }
                },
                "type": "object"
            },
            "MyTruckResource": {
                "title": "My Truck Resource",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "model": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "pending",
                            "active",
                            "inactive"
                        ]
                    },
                    "price_per_day": {
                        "type": "string",
                        "format": "decimal"
                    },
                    "category": {
                        "type": "string"
                    },
                    "main_image": {
                        "type": "string",
                        "format": "url"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "BookingResource": {
                "title": "Booking Resource",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "status": {
                        "type": "string"
                    },
                    "start_datetime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "end_datetime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "total_price": {
                        "type": "string",
                        "format": "decimal"
                    },
                    "truck": {
                        "$ref": "#/components/schemas/MyTruckResource"
                    },
                    "other_party": {
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "SubCategory": {
                "title": "SubCategory",
                "description": "A sub-category object",
                "required": [
                    "id",
                    "name"
                ],
                "properties": {
                    "id": {
                        "description": "The unique ID of the sub-category",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "description": "The name of the sub-category",
                        "type": "string"
                    },
                    "category_id": {
                        "description": "The ID of the parent category",
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "type": "object"
            },
            "UserTruck": {
                "title": "User Truck",
                "description": "Details of a truck owned by a user",
                "required": [
                    "id",
                    "user_id",
                    "make",
                    "model"
                ],
                "properties": {
                    "id": {
                        "description": "The unique ID of the truck",
                        "type": "integer",
                        "format": "int64"
                    },
                    "user_id": {
                        "description": "The ID of the user who owns the truck",
                        "type": "integer",
                        "format": "int64"
                    },
                    "make": {
                        "description": "The truck's manufacturer",
                        "type": "string"
                    },
                    "model": {
                        "description": "The truck's model",
                        "type": "string"
                    },
                    "year": {
                        "description": "The year the truck was made",
                        "type": "integer"
                    },
                    "license_plate": {
                        "description": "The truck's license plate number",
                        "type": "string"
                    },
                    "is_active": {
                        "description": "Indicates if the truck is active and visible to others",
                        "type": "boolean"
                    },
                    "created_at": {
                        "description": "Timestamp when the truck record was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Timestamp when the truck record was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "Authentication"
        },
        {
            "name": "User",
            "description": "User"
        },
        {
            "name": "Booking Management",
            "description": "Booking Management"
        },
        {
            "name": "My Trucks",
            "description": "My Trucks"
        },
        {
            "name": "Public Data",
            "description": "Public Data"
        },
        {
            "name": "Truck Management",
            "description": "Truck Management"
        }
    ]
}